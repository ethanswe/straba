[{"/home/john/Documents/week20FlaskReact/straba/react-app/src/index.js":"1","/home/john/Documents/week20FlaskReact/straba/react-app/src/App.js":"2","/home/john/Documents/week20FlaskReact/straba/react-app/src/components/auth/SignUpForm.js":"3","/home/john/Documents/week20FlaskReact/straba/react-app/src/components/UsersList.js":"4","/home/john/Documents/week20FlaskReact/straba/react-app/src/components/User.js":"5","/home/john/Documents/week20FlaskReact/straba/react-app/src/components/NavBar.js":"6","/home/john/Documents/week20FlaskReact/straba/react-app/src/components/auth/LoginForm.js":"7","/home/john/Documents/week20FlaskReact/straba/react-app/src/components/auth/ProtectedRoute.js":"8","/home/john/Documents/week20FlaskReact/straba/react-app/src/services/auth.js":"9","/home/john/Documents/week20FlaskReact/straba/react-app/src/components/auth/LogoutButton.js":"10","/home/john/Documents/week20FlaskReact/straba/react-app/src/components/HomePage.js":"11","/home/john/Documents/week20FlaskReact/straba/react-app/src/components/create-activity/CreateActivityForm.js":"12","/home/john/Documents/week20FlaskReact/straba/react-app/src/components/activities-feed/Activities.js":"13","/home/john/Documents/week20FlaskReact/straba/react-app/src/components/Following.js":"14"},{"size":219,"mtime":1609180037623,"results":"15","hashOfConfig":"16"},{"size":1924,"mtime":1609289090317,"results":"17","hashOfConfig":"16"},{"size":5363,"mtime":1609279092619,"results":"18","hashOfConfig":"16"},{"size":704,"mtime":1609198173875,"results":"19","hashOfConfig":"16"},{"size":3030,"mtime":1609289090321,"results":"20","hashOfConfig":"16"},{"size":2758,"mtime":1609289090321,"results":"21","hashOfConfig":"16"},{"size":3095,"mtime":1609289090321,"results":"22","hashOfConfig":"16"},{"size":259,"mtime":1609180037623,"results":"23","hashOfConfig":"16"},{"size":1064,"mtime":1609203098124,"results":"24","hashOfConfig":"16"},{"size":1118,"mtime":1609289090321,"results":"25","hashOfConfig":"16"},{"size":1031,"mtime":1609289854571,"results":"26","hashOfConfig":"16"},{"size":4598,"mtime":1609289676064,"results":"27","hashOfConfig":"16"},{"size":1928,"mtime":1609289062622,"results":"28","hashOfConfig":"16"},{"size":1277,"mtime":1609289090317,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1qfzm38",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"32"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"32"},"/home/john/Documents/week20FlaskReact/straba/react-app/src/index.js",[],["62","63"],"/home/john/Documents/week20FlaskReact/straba/react-app/src/App.js",[],"/home/john/Documents/week20FlaskReact/straba/react-app/src/components/auth/SignUpForm.js",[],"/home/john/Documents/week20FlaskReact/straba/react-app/src/components/UsersList.js",[],"/home/john/Documents/week20FlaskReact/straba/react-app/src/components/User.js",[],"/home/john/Documents/week20FlaskReact/straba/react-app/src/components/NavBar.js",[],"/home/john/Documents/week20FlaskReact/straba/react-app/src/components/auth/LoginForm.js",[],"/home/john/Documents/week20FlaskReact/straba/react-app/src/components/auth/ProtectedRoute.js",[],"/home/john/Documents/week20FlaskReact/straba/react-app/src/services/auth.js",[],"/home/john/Documents/week20FlaskReact/straba/react-app/src/components/auth/LogoutButton.js",[],"/home/john/Documents/week20FlaskReact/straba/react-app/src/components/HomePage.js",["64","65","66"],"/home/john/Documents/week20FlaskReact/straba/react-app/src/components/create-activity/CreateActivityForm.js",["67"],"import React, { useState } from 'react'\nimport { Form, Input, TextArea, Button } from 'semantic-ui-react'\nimport styled from 'styled-components'\n\nconst BackgroundImg = styled.div`\nbackground-image: url('https://images.pexels.com/photos/2729899/pexels-photo-2729899.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=750&w=1260'); \nwidth: 100vw;\nheight: 100vh;\nbackground-size: cover;\n/* display: flex; */\n/* align-items: center; */\n/* justify-content: center; */\n/* z-index: -10; */\nposition: absolute;\n`\n\nconst Container = styled.div`\ndisplay: flex;\njustify-content: center;\nalign-items: center;\nborder-radius: 25px;\nwidth: 200px;\nheight: 235px;\ncolor: white;\nmargin: 0 auto;\nflex-direction: row;\nbackground-color: black;\nopacity: 85%;\nz-index: 1;\nmargin-top: 150px;\nposition: absolute;\n`\n\nexport const CreateActivityForm = () => {\n    const [title, setTitle] = useState(\"\");\n    const [description, setDescription] = useState(\"\");\n    const [distance_string, setDistance] = useState(0);\n    const [time_string, setTime] = useState(0);\n    const [gpx_file, setGPX_file] = useState(null);\n    const [user_id, setUser_Id] = useState(1);\n    return (\n        <>\n            <BackgroundImg />\n                <Container>\n                    <Form>\n                        <Form.Field>\n                            <Input \n                            placeholder=\"Title\" \n                            value={title} \n                            onChange={e => setTitle(e.target.value)}\n                            />\n                        </Form.Field>\n                        <Form.Field>\n                            <TextArea \n                            placeholder=\"Describe your activity.\" \n                            value={description}\n                            onChange={(e)=> setDescription(e.target.value)}\n                            />\n                        </Form.Field>\n                        <Form.Field>\n                            <Input\n                            label={{ basic: true, content: 'miles' }}\n                            labelPosition='right'\n                            placeholder='Distance'\n                            value={distance_string}\n                            onChange={(e)=> setDistance(e.target.value)}\n                            />\n                        </Form.Field>\n                        <Form.Field>\n                            <Input\n                            label={{ basic: true, content: 'minutes' }}\n                            labelPosition='right'\n                            placeholder='Time'\n                            value={time_string}\n                            onChange={(e)=> setTime(e.target.value)}\n                            />\n                        </Form.Field>\n                        <Form.Field>\n                            <Input \n                            placeholder=\"GPX File\" \n                            value={gpx_file} \n                            onChange={e => setGPX_file(e.target.value)}\n                            />\n                        </Form.Field>\n                        <Form.Field>\n                            <Button onClick = {async () => {\n                                const time = parseFloat(time_string).toFixed(2)\n                                const distance = parseFloat(distance_string).toFixed(2)\n                                console.log(time)\n                                console.log(distance)\n                                const activity = {title, description, distance, time, gpx_file, user_id};\n                                console.log(activity)\n                                const res = await fetch(`/api/activities/new/${user_id}`, {\n                                    // /api/activities/users/1/activities/new\n                                    method: 'POST',\n                                    headers: {\n                                        'Content-Type': 'application/json'\n                                    },\n                                    body: JSON.stringify(activity)\n                                })\n                                if (res.ok){\n                                    console.log('response worked')\n                                } else {\n                                    console.log(res)\n                                    console.log('POST failed.')\n                                }\n                            }}>\n                                Submit\n                            </Button>\n                        </Form.Field>\n                    </Form>\n            </Container>\n           \n        </>\n    )\n}","/home/john/Documents/week20FlaskReact/straba/react-app/src/components/activities-feed/Activities.js",["68","69"],"import React, { useState, useEffect } from 'react'\nimport { List, Header } from 'semantic-ui-react'\nimport './activities.css';\nimport logo from './strabalogo.png';\n\n\nexport const ActivityFeed = ()=> {\n    const [loaded, setLoaded] = useState(false);\n    const [activities, setActivities] = useState({});\n\n    useEffect(() => {\n      fetch('/api/activities').then(res =>\n        res.json().then(data => {\n            setActivities(data.activities)\n            \n            setLoaded(true);\n            console.log(data)\n        })\n        )\n    }, [])\n    if (!loaded) {\n        return null;\n      }\n    return (\n      <>\n            {/* <List>\n                {activities.map(activity =>{\n                   return(\n                        <List.Item key={activity.title}>\n                            <Header>\n                                {activity.title}\n                            </Header>\n                            <Header>\n                                {activity.description}\n                            </Header>\n                            <Header>\n                                {activity.distance} miles\n                            </Header>\n                            <Header>\n                                {activity.time} minutes\n                            </Header>\n                        </List.Item>\n                   )\n                })}\n            </List> */}\n            {activities.map(activity =>{\n              return (\n                <div className='newsContainer' key={activity.id}>\n                    <div className='newsTitle'>\n                      {activity.title}\n                    </div>\n                    <div className='newsSummary'>\n                    {activity.description}\n                    </div>\n                     <img height='50px' width='50px' src={logo} alt='activity pic'></img>\n                 </div>\n              )\n            })}\n        </>\n    \n    )\n\n}","/home/john/Documents/week20FlaskReact/straba/react-app/src/components/Following.js",["70"],"import React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nfunction FollowingComp() {\n    const [followers, setFollowers] = useState([]);\n    const [following, setFollowing] = useState([]);\n\n    const { userId } = useParams();\n    \n\n    useEffect(() => {\n        if(!userId) {\n            return\n        }\n        (async () => {\n            const response = await fetch(`/api/following/${userId}`)\n            const data = await response.json();\n            console.log(data)\n            // if(data.followers.length > 0) {\n            //     setFollowers(data[followers])\n            // } else {\n            //     setFollowers(['You have no followers.'])\n            // }\n            data.followers.length > 0 ? (\n                setFollowers(data[followers])\n            ) : (\n                setFollowers(['You have no followers.'])\n            )\n            data.following.length > 0 ? (\n                setFollowing(data[following])\n            ) : (\n                setFollowing(['You are not following anyone.'])\n            )\n        })();\n        \n    }, [])\n\n    return (\n        <>\n        <div>{followers}</div>\n        <div>{following}</div>\n        <h1>This is a test</h1>\n        </>\n    )\n}\n\nexport default FollowingComp;",{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","severity":1,"message":"76","line":2,"column":10,"nodeType":"77","messageId":"78","endLine":2,"endColumn":17},{"ruleId":"75","severity":1,"message":"79","line":2,"column":19,"nodeType":"77","messageId":"78","endLine":2,"endColumn":30},{"ruleId":"75","severity":1,"message":"80","line":3,"column":8,"nodeType":"77","messageId":"78","endLine":3,"endColumn":20},{"ruleId":"75","severity":1,"message":"81","line":40,"column":21,"nodeType":"77","messageId":"78","endLine":40,"endColumn":31},{"ruleId":"75","severity":1,"message":"82","line":2,"column":10,"nodeType":"77","messageId":"78","endLine":2,"endColumn":14},{"ruleId":"75","severity":1,"message":"83","line":2,"column":16,"nodeType":"77","messageId":"78","endLine":2,"endColumn":22},{"ruleId":"84","severity":1,"message":"85","line":36,"column":8,"nodeType":"86","endLine":36,"endColumn":10,"suggestions":"87"},"no-native-reassign",["88"],"no-negated-in-lhs",["89"],"no-unused-vars","'NavLink' is defined but never used.","Identifier","unusedVar","'useLocation' is defined but never used.","'LogoutButton' is defined but never used.","'setUser_Id' is assigned a value but never used.","'List' is defined but never used.","'Header' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'followers', 'following', and 'userId'. Either include them or remove the dependency array. You can also do a functional update 'setFollowers(f => ...)' if you only need 'followers' in the 'setFollowers' call.","ArrayExpression",["90"],"no-global-assign","no-unsafe-negation",{"desc":"91","fix":"92"},"Update the dependencies array to be: [followers, following, userId]",{"range":"93","text":"94"},[1104,1106],"[followers, following, userId]"]